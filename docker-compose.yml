version: '3.6'

secrets:
  ca.crt:
    file: ./secrets/certificate_authority/ca/ca.crt
  elasticsearch.keystore:
    file: ./secrets/elasticsearch.keystore
  elastic-stack-ca.p12:
    file: ./secrets/certificate_authority/elastic-stack-ca.p12
  elasticsearch.key:
    file: ./secrets/certificates/elasticsearch/elasticsearch.key
  elasticsearch.cert:
    file: ./secrets/certificates/elasticsearch/elasticsearch.crt
  kibana.key:
    file: ./secrets/certificates/kibana/kibana.key
  kibana.cert:
    file: ./secrets/certificates/kibana/kibana.crt
  logstash.pkcs8.key:
    file: ./secrets/certificates/logstash/logstash.pkcs8.key
  logstash.key:
    file: ./secrets/certificates/logstash/logstash.key
  logstash.p12:
    file: ./secrets/keystores/logstash/logstash.p12
  logstash.cert:
    file: ./secrets/certificates/logstash/logstash.crt
  filebeat.key:
    file: ./secrets/certificates/filebeat/filebeat.key
  filebeat.cert:
    file: ./secrets/certificates/filebeat/filebeat.crt
  arkime.key:
    file: ./secrets/certificates/arkime/arkime.key
  arkime.cert:
    file: ./secrets/certificates/arkime/arkime.crt
  rita_web.key:
    file: ./secrets/certificates/rita_web/rita_web.key
  rita_web.cert:
    file: ./secrets/certificates/rita_web/rita_web.crt

services:
  elasticsearch:
    container_name: elasticsearch
    hostname: elasticsearch
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: ${ELK_VERSION}
    restart: unless-stopped
    environment:
      CONFIG_DIR: ${ELASTIC_DIR}/config
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      ES_JAVA_OPTS: -Xmx${ELASTICSEARCH_HEAP} -Xms${ELASTICSEARCH_HEAP}
      #bootstrap.memory_lock: 'true'
      discovery.type: single-node
      path.data: ${ELASTIC_DIR}/data
      path.logs: ${ELASTIC_DIR}/logs
      ingest.geoip.downloader.enabled: 'false'
    volumes:
      - ${ELASTIC_DATA_PATH}:${ELASTIC_DIR}/data:rw
      - ${LOGS_PATH}/elasticsearch:${ELASTIC_DIR}/logs:rw
      - ./elasticsearch/config/elasticsearch.yml:${ELASTIC_DIR}/config/elasticsearch.yml:ro
    secrets:
      - source: elasticsearch.keystore
        target: ${ELASTIC_DIR}/config/elasticsearch.keystore
      - source: ca.crt
        target: ${ELASTIC_DIR}/config/ca.crt
      - source: elasticsearch.cert
        target: ${ELASTIC_DIR}/config/elasticsearch.crt
      - source: elasticsearch.key
        target: ${ELASTIC_DIR}/config/elasticsearch.key
    ports:
      - '9200:9200'
      - '9300:9300'
    healthcheck:
      test: curl -s https://elasticsearch:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 200000
        hard: 200000
    networks:
      - elk

  kibana:
    container_name: kibana
    hostname: kibana
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    restart: unless-stopped
    volumes:
      - ./kibana/config/kibana.yml:${KIBANA_DIR}/config/kibana.yml:ro
    environment:
      CONFIG_DIR: ${KIBANA_DIR}/config
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      ENCRYPTION_KEY: ${XPACK_ENCRYPTION_KEY}
      KIBANA_URL: ${KIBANA_URL}
    secrets:
      - source: ca.crt
        target: ${KIBANA_DIR}/config/ca.crt
      - source: kibana.cert
        target: ${KIBANA_DIR}/config/kibana.crt
      - source: kibana.key
        target: ${KIBANA_DIR}/config/kibana.key
    healthcheck:
      test: curl -s https://kibana:5601 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - '5601:5601'
    networks:
      - elk
    depends_on:
      - elasticsearch

  logstash:
    container_name: logstash
    hostname: logstash
    build:
      context: logstash/
      args:
        ELK_VERSION: $ELK_VERSION
    restart: unless-stopped
    volumes:
      - ./logstash/config/logstash.yml:${LOGSTASH_DIR}/config/logstash.yml
      - ./logstash/pipeline/logstash.conf:${LOGSTASH_DIR}/pipeline/logstash.conf
      - geoip:/usr/share/GeoIP
    environment:
      path.settings: null
      CONFIG_DIR: ${LOGSTASH_DIR}/config
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      LS_JAVA_OPTS: '-Xmx${LOGSTASH_HEAP} -Xms${LOGSTASH_HEAP}'
    secrets:
      - source: ca.crt
        target: ${LOGSTASH_DIR}/config/ca.crt
      - source: logstash.cert
        target: ${LOGSTASH_DIR}/config/logstash.crt
      - source: logstash.pkcs8.key
        target: ${LOGSTASH_DIR}/config/logstash.pkcs8.key
      - source: logstash.key
        target: ${LOGSTASH_DIR}/config/logstash.key
      - source: logstash.p12
        target: ${LOGSTASH_DIR}/config/logstash.p12
    networks:
      - elk
    ports:
      - '12201:12201/udp'
      - '5044:5044'
      - '5045:5045/tcp'
      - '5046:5046'
      - '9600:9600'
      - '5000:5000/tcp'
      - '5000:5000/udp'
    depends_on:
      - elasticsearch
      - kibana

  filebeat:
    container_name: filebeat
    hostname: filebeat
    build:
      context: filebeat/
      args:
        ELK_VERSION: $ELK_VERSION
    restart: unless-stopped
    privileged: true
    command: >
      sh -c "filebeat -e -strict.perms=false"
    environment:
      CONFIG_DIR: ${FILEBEAT_DIR}/config
      LS_JAVA_OPTS: '-Xmx${FILEBEAT_HEAP} -Xms${FILEBEAT_HEAP}'
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
    volumes:
      - ./filebeat/config/filebeat.yml:${FILEBEAT_DIR}/filebeat.yml:ro
      - ${LOGS_PATH}/zeek/logs:/logs/zeek:ro
      - ${LOGS_PATH}/suricata/logs:/logs/suricata:ro
    secrets:
      - source: ca.crt
        target: ${FILEBEAT_DIR}/config/ca.crt
      - source: filebeat.cert
        target: ${FILEBEAT_DIR}/config/filebeat.crt
      - source: filebeat.key
        target: ${FILEBEAT_DIR}/config/filebeat.key
    ports:
      - '9000:9000'
    networks:
      - elk
    depends_on:
      - logstash

  zeek:
    container_name: zeek
    image: blacktop/zeek:elastic
    restart: unless-stopped
    volumes:
      - ${LOGS_PATH}/zeek/logs:/pcap
      - ./zeek/config:/opt/zeek/share/zeek/site
      - geoip:/usr/share/GeoIP
    cap_add:
      - NET_ADMIN
    network_mode: 'host'
    command: -i af_packet::${HOST_INTERFACE} local
    depends_on:
      - filebeat

  arkime:
    container_name: arkime
    build:
      context: arkime
      args:
        - ELASTIC_USERNAME=${ELASTIC_USERNAME}
        - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
        - ARKIME_DIR=${ARKIME_DIR}
        - HOST_INTERFACE=${HOST_INTERFACE}
    restart: unless-stopped
    secrets:
      - source: ca.crt
        target: ${ARKIME_DIR}/config/ca.crt
      - source: arkime.cert
        target: ${ARKIME_DIR}/config/arkime.crt
      - source: arkime.key
        target: ${ARKIME_DIR}/config/arkime.key
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_NICE
    network_mode: 'host'
    volumes:
      - geoip:/usr/share/GeoIP
      - ${LOGS_PATH}/arkime/logs:/data/logs:rw
      - ${LOGS_PATH}/arkime/pcap:/data/pcap:rw
      - ./arkime/config/config.ini:/data/config.ini:rw
    depends_on:
      - elasticsearch

  suricata:
    container_name: suricata
    image: jasonish/suricata:latest
    volumes:
      - ${LOGS_PATH}/suricata/logs:/var/log/suricata
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_NICE
    network_mode: 'host'
    command: -i ${HOST_INTERFACE}
    depends_on:
      - filebeat

  geoip:
    container_name: geoip
    image: maxmindinc/geoipupdate:latest
    environment:
      - GEOIPUPDATE_ACCOUNT_ID=${GEOIPUPDATE_ACCOUNT_ID}
      - GEOIPUPDATE_LICENSE_KEY=${GEOIPUPDATE_LICENSE_KEY}
      - 'GEOIPUPDATE_EDITION_IDS=GeoLite2-ASN GeoLite2-City GeoLite2-Country'
      - GEOIPUPDATE_FREQUENCY=12
    volumes:
      - geoip:/usr/share/GeoIP

  mongo:
    image: mongo:4.2
    hostname: mongo
    container_name: mongo
    volumes:
      - mongo:/data/db/

  rita:
    container_name: rita
    build: rita/
    stdin_open: true
    tty: true
    links:
      - mongo:localhost
    volumes:
      - ./rita/config/config.yaml:/etc/rita/config.yaml:ro
      - ${LOGS_PATH}/zeek/logs:/logs:ro
      - ${LOGS_PATH}/rita/logs/html-report.log:/html-report.log:rw
      - ./rita/mongo:/root:rw

  rita_web:
    container_name: rita_web
    build:
      args:
        - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      context: ./rita_web/
    volumes:
      - ./rita/mongo/dataset:/usr/share/nginx/html
    ports:
      - 8001:443
    depends_on:
      - rita
    secrets:
      - source: ca.crt
        target: /etc/nginx/certs/ca.crt
      - source: rita_web.cert
        target: /etc/nginx/certs/rita_web.crt
      - source: rita_web.key
        target: /etc/nginx/certs/rita_web.key

volumes:
  geoip:
  mongo:

networks:
  elk:
    driver: bridge
